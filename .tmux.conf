# ▄▄▄█████▓ ███▄ ▄███▓ █    ██ ▒██   ██▒
# ▓  ██▒ ▓▒▓██▒▀█▀ ██▒ ██  ▓██▒▒▒ █ █ ▒░
# ▒ ▓██░ ▒░▓██    ▓██░▓██  ▒██░░░  █   ░
# ░ ▓██▓ ░ ▒██    ▒██ ▓▓█  ░██░ ░ █ █ ▒ 
#   ▒██▒ ░ ▒██▒   ░██▒▒▒█████▓ ▒██▒ ▒██▒
#   ▒ ░░   ░ ▒░   ░  ░░▒▓▒ ▒ ▒ ▒▒ ░ ░▓ ░
#     ░    ░  ░      ░░░▒░ ░ ░ ░░   ░▒ ░
#   ░      ░      ░    ░░░ ░ ░  ░    ░  
#                 ░      ░      ░    ░  

set -sg escape-time 0 
set -g default-terminal "screen-256color"

# remap prefix from 'C-b' to 'M-b'
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix
set -g status-bg default
set -g status-fg default

#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-fg green
set-window-option -g window-status-current-style bg=default,fg=green

# resize panes using ctrl-b, useful for resize tmux panes while still in vim
bind -r k resize-pane -U
bind -r j resize-pane -D
bind -r h resize-pane -L
bind -r l resize-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n  C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n  C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n  C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n  C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi  C-h select-pane -L
bind-key -T copy-mode-vi  C-j select-pane -D
bind-key -T copy-mode-vi  C-k select-pane -U
bind-key -T copy-mode-vi  C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# old, using ctrl-w, keeping in case I want to switch back, or to be used as reference to map leaders in tmux
# vim-like navigation
#bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Ttable1"
#bind-key -Ttable1 'h' select-pane -L
#bind-key -Ttable1 'j' select-pane -D
#bind-key -Ttable1 'k' select-pane -U
#bind-key -Ttable1 'l' select-pane -R
#bind-key -Ttable1 '\' select-pane -l

# display prefix hint
# set -g status-right '#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}'

# Autohide status bar if only one window is open
set -g status off
set-hook -g window-linked "if-shell -F '#{!=:#{session_windows},1}' 'set status on'"
set-hook -g window-unlinked "if-shell -F '#{==:#{session_windows},1}' 'set status off'"

# Minimize status bar and center it
set -g status-justify centre
set-option -g status-right ""
set-option -g status-left "#{window-name}"
set -g window-status-current-format '|'
set -g window-status-format '.'
